name: Publish NuGet Package to GitHub Packages and NuGet.org

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '9.0.x'

      - name: Extract Version from .csproj
        id: get_version
        run: |
          $version = ([xml](Get-Content -Path Rustify.csproj)).Project.PropertyGroup.Version
          echo "VERSION=$version" >> $GITHUB_OUTPUT
        shell: pwsh

      - name: Create Git Tag if version changed
        run: |
          VERSION=${{ steps.get_version.outputs.VERSION }}
          TAG_NAME="v$VERSION"
          echo "Checking for tag $TAG_NAME from version $VERSION"
          if git rev-parse "$TAG_NAME" >/dev/null 2>&1; then
            echo "Tag $TAG_NAME already exists locally. Skipping tag creation."
          else
            echo "Tag $TAG_NAME does not exist. Creating tag..."
            git config user.name "${{ github.actor }}"
            git config user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"
            git tag "$TAG_NAME" -m "Release version $TAG_NAME"
            echo "Created tag $TAG_NAME"
            echo "Pushing tag $TAG_NAME..."
            git push origin "$TAG_NAME"
            echo "Pushed tag $TAG_NAME"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Restore dependencies
        run: dotnet restore Rustify.csproj

      - name: Pack
        run: dotnet pack Rustify.csproj --configuration Release --output ./nupkgs

      - name: Publish to GitHub Packages
        run: dotnet nuget push ./nupkgs/*.nupkg --api-key ${{ secrets.GITHUB_TOKEN }} --source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" --skip-duplicate

      - name: Publish to NuGet.org
        env:
          NUGET_API_KEY_ENV: ${{ secrets.NUGET_API_KEY }}
        if: ${{ startsWith(github.ref, 'refs/tags/v') && env.NUGET_API_KEY_ENV != '' }}
        run: dotnet nuget push ./nupkgs/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source "https://api.nuget.org/v3/index.json" --skip-duplicate